// @flow
import type { MetricValue } from 'types';

export type ShipmentProps = {
  id: string,
  no: string,
  totalVolume: MetricValue,
  tags: Array<Object>,
  importer: {
    id: string,
  },
  exporter: ?{
    id: string,
  },
};

export type BatchProps = {
  id: string,
  archived: boolean,
  no: string,
  latestQuantity: number,
  tags: Array<Object>,
  totalVolume: ?MetricValue,
  deliveredAt: ?string,
  shipment: ?{
    id: string,
  },
  container: ?{
    id: string,
  },
  todo: {
    taskCount: {
      completed: number,
      inProgress: number,
      remain: number,
      skipped: number,
    },
  },
};

export type OrderItemProps = {
  id: string,
  archived: boolean,
  name: string,
  orderedQuantity: number,
  batchedQuantity: number,
  shippedQuantity: number,
  batched?: number,
  shipped?: number,
  productProvider: {
    exporter: {
      id: string,
    },
  },
  batches: Array<BatchProps>,
  tags: Array<Object>,
};

export type OrderProps = {
  id: string,
  archived: boolean,
  batchCount: number,
  batchShippedCount: number,
  id: string,
  orderItemCount: number,
  orderItems: Array<OrderItemProps>,
  poNo: string,
  shipmentCount: number,
  shipments: Array<ShipmentProps>,
  totalBatched: number,
  totalOrdered: number,
  totalShipped: number,
  tags: Array<Object>,
  exporter: {
    id: string,
  },
  importer: {
    id: string,
  },
  todo: {
    taskCount: {
      completed: number,
      inProgress: number,
      remain: number,
      skipped: number,
    },
  },
};
