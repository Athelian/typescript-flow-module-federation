// @flow

export type UIState = {
  /**
   * Those flags for UI
   */
  loading: boolean,
  error: boolean,
  showTag: boolean,
  toggleShipmentList: boolean,
  // all shipment toggle
  shipments: Array<Object>,
  totalShipment: number,
  expandCards: {
    orders: Array<string>,
    shipments: Array<string>,
  },
  /**
   * The refetch*** is for reload the new order or shipment when
   * move to order item/batch to new order/shipment
   */
  refetch: {
    orderIds: Array<string>,
    shipmentIds: Array<string>,
  },
  refetchAll: boolean,
  /**
   * Those for target and highlight
   */
  targets: Array<string>,
  highlight: {
    type: string,
    selectedId: string,
  },
  select: {
    mode: 'SINGLE' | 'ALL',
    entities: Array<string>,
  },
  /**
   * Each action on RM navbar will belong to its domain field
   */
  edit: {
    type: string,
    selectedId: string,
  },
  new: {
    orders: Array<string>,
    shipments: Array<string>,
    updateOrdersInput: Array<{
      id: string,
      oldCurrency: string,
      newCurrency: string,
      orderItems: Array<Object>,
      oldOrderItems: Array<Object>,
    }>,
  },
  split: {
    batches: Object,
  },
  balanceSplit: {
    batches: Array<Object>,
  },
  clone: {
    orders: Object,
    orderItems: Object,
    batches: Object,
    shipments: Object,
    /**
     * Use shipment no for clone
     */
    shipmentNo: Object,
  },
  constraint: {
    /**
     * This is using for checking those order item, batches has the same exporter
     * This is use below format
     * [entityId-exporterId]
     */
    exporterIds: Array<string>,
    importerIds: Array<string>,
  },
  connectOrder: {
    enableSelectMode: boolean,
    status: boolean,
    orderId: string,
    /**
     * This is a workaround for checking the target order before and after mutation
     * Then we would know which is the new order item, batch was moved
     */
    sourceOrder: Object,
  },
  connectShipment: {
    enableSelectMode: boolean,
    status: boolean,
    shipmentId: string,
    lastResultId: string,
  },
};
